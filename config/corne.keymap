#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/ext_power.h>

// Layer Definitions
#define DEFAULT 0
#define NAV 1
#define MOUSE 2
#define MEDIA 3
#define NUM 4
#define SYM 5
#define FN 6

// TODO
// Change right index LSFT on numbers layer to shift to alternative shift layer, 
// with everything shifted except the left thumb keys being ( )
// (waiting on ZMK extended keycode support)

/ {
//  Homerow mod held behaviour
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping_term_ms = <150>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        lht: layer_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_HOLD_TAP";
            #binding-cells = <2>;
            tapping_term_ms = <150>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&kp>;
        };
    };

// HELD on each layer shows which key(s) are being held to access that layer
// #'s signify the split

    keymap {
        compatible = "zmk,keymap";

        default_layer {
// ---------------------------------------------------------------------------------------------------------
// |     |   Q    |   W    |     F     |     P     |     B     | # |     J     |     L     |    U    |    Y   |   '    |     |
// |     | A/LGUI | R/LALT |  S/LCTRL  |  T/LSHFT  |     G     | # |     M     |  N/LSHFT  | E/LCTRL | I/LALT | O/LGUI |     |
// |     |   Z    | X/RALT |     C     |     D     |     V     | # |     K     |     H     |    ,    | ./RALT |   /    |     |
//                         | ESC/MEDIA | SPACE/NAV | TAB/MOUSE | # | ENTER/SYM | BSPC/NUM | DEL/FN  |

            bindings = <
&trans  &kp Q       &kp W       &kp F           &kp P           &kp B                 &kp J           &kp L         &kp U        &kp Y         &kp SQT     &trans
&trans  &hm LGUI A  &hm LALT R  &hm LCTRL S     &hm LSHFT T     &kp G                 &kp M           &hm LSHFT N   &hm LCTRL E  &hm LALT I    &hm LGUI O  &trans
&trans  &kp Z       &kp RALT X  &kp C           &kp D           &kp V                 &kp K           &kp H         &kp CMMA     &hm RALT DOT  &kp FSLH    &trans
                                &lht MEDIA ESC  &lht NAV SPACE  &lht MOUSE TAB        &lht SYM ENTER  &lt NUM BSPC  &lt FN DEL
            >;
        };

        navigation {
// ---------------------------------------------------------------------------------------
// |     |      |      |       |       |     | # | REDO  | CUT  | COPY | PASTE | UNDO  |     |
// |     | LGUI | LALT | LCTRL | LSHFT |     | # | CAPS  | LEFT | DOWN | UP    | RIGHT |     |
// |     |      | RALT |       |       |     | # | INS   | HOME | PGDN | PGUP  | END   |     |
//                     |       | HELD  |     | # | ENTER | BSPC | DEL  |

            bindings = <
&trans  &trans    &trans    &trans     &trans     &trans        &kp K_REDO  &kp K_CUT  &kp K_COPY  &kp K_PASTE  &kp K_UNDO  &trans        
&trans  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &trans        &kp CAPS    &kp LEFT   &kp DOWN    &kp UP       &kp RIGHT   &trans
&trans  &trans    &kp RALT  &trans     &trans     &trans        &kp INS     &kp HOME   &kp PG_DN   &kp PG_UP    &kp END     &trans
                            &trans     &trans     &trans        &kp ENTER   &kp BSPC   &kp DEL
            >;  
        };

        mouse {
// -------------------------------------------------------------------------------------
// |     |      |      |       |       |      | # |     |     |     |     |     |     |
// |     | LGUI | LALT | LCTRL | LSHFT |      | # |     |     |     |     |     |     |
// |     |      | RALT |       |       |      | # |     |     |     |     |     |     |
//                     |       |       | HELD | # |     |     |     |

            bindings = <
&trans  &trans    &trans    &trans     &trans     &trans        &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &trans        &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans    &kp RALT  &trans     &trans     &trans        &trans  &trans  &trans  &trans  &trans  &trans
                            &trans     &trans     &trans        &trans  &trans  &trans
            >;
        };

        media {
// -------------------------------------------------------------------------------------
// |     |      |      |       |       |      | # |      | EP_OFF | BT_PRV | BT_NXT | EP_ON |     |
// |     | LGUI | LALT | LCTRL | LSHFT |      | # |      | PREV   | VOLD   | VOLU   | NEXT  |     |
// |     |      | RALT |       |       |      | # |      |        | BR_D   | BR_U   |       |     |
//                     | HELD  |       |      | # | STOP | PLAY   | MUTE   |

            bindings = <
&trans  &trans    &trans    &trans     &trans     &trans        &trans      &ext_power EP_OFF  &bt BT_PRV    &bt BT_NXT    &ext_power EP_ON  &trans     
&trans  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &trans        &trans      &cp C_PREV         &cp C_VOL_DN  &cp C_VOL_UP  &cp C_NEXT        &trans
&trans  &trans    &kp RALT  &trans     &trans     &trans        &trans      &trans             &cp C_BRI_DN  &cp C_BRI_UP  &trans            &trans
                            &trans     &trans     &trans        &cp C_STOP  &cp C_PLAY         &cp C_MUTE
            >;
        };

        numbers {
// ---------------------------------------------------------------------------------
// |     |  [  |  7  |  8  |  9  |  ]  | # |     |       |       |      |      |     |
// |     |  ;  |  4  |  5  |  6  |  =  | # |     | LSHFT | LCTRL | LALT | LGUI |     |
// |     |  `  |  1  |  2  |  3  |  \  | # |     |       |       | RALT |      |     | 
//                   |  .  |  0  |  -  | # |     | HELD  |       |

            bindings = <
&trans  &kp LBKT   &kp N7  &kp N8   &kp N9  &kp RBKT         &trans  &trans     &trans     &trans    &trans    &trans    
&trans  &kp SEMI   &kp N4  &kp N5   &kp N6  &kp EQUAL        &trans  &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI  &trans
&trans  &kp GRAVE  &kp N1  &kp N2   &kp N3  &kp BSLH         &trans  &trans     &trans     &kp RALT  &trans    &trans    
                           &kp DOT  &kp N0  &kp MINUS        &trans  &trans     &trans
            >;
        };

        symbols {
// ---------------------------------------------------------------------------------
// |     |  {  |  &  |  *  |  (  |  }  | # |      |       |       |      |      |     |
// |     |  :  |  $  |  %  |  ^  |  +  | # |      | LSHFT | LCTRL | LALT | LGUI |     |
// |     |  ~  |  !  |  @  |  #  |  |  | # |      |       |       | RALT |      |     | 
//                   |  (  |  )  |  _  | # | HELD |       |       |

            bindings = <
&trans  &kp LBRC   &kp AMPS  &kp ASTRK  &kp LPAR   &kp RBRC              &trans  &trans     &trans     &trans    &trans    &trans    
&trans  &kp SEMI   &kp DLLR  &kp PRCNT  &kp CARET  &kp PLUS              &trans  &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI  &trans
&trans  &kp TILDE  &kp EXCL  &kp AT     &kp HASH   &kp PIPE              &trans  &trans     &trans     &kp RALT  &trans    &trans    
                             &kp LPAR   &kp RPAR   &kp UNDERSCORE        &trans  &trans     &trans
            >;
        };

        function {
// -------------------------------------------------------------------------------------
// |     |  F12 |  F7  |  F8  |  F9   | PSCRN | # |     |       |       |      |      |     |
// |     |  F11 |  F4  |  F5  |  F6   | SLCK  | # |     | LSHFT | LCTRL | LALT | LGUI |     |
// |     |  F10 |  F1  |  F2  |  F3   | PAUSE | # |     |       |       | RALT |      |     | 
//                     | ESC  | SPACE |  TAB  | # |     |       | HELD  |

            bindings = <
&trans  &kp F12  &kp F7  &kp F8   &kp F9     &kp PSCRN              &trans  &trans     &trans     &trans    &trans    &trans    
&trans  &kp F11  &kp F4  &kp F5   &kp F6     &kp SLCK               &trans  &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI  &trans
&trans  &kp F10  &kp F1  &kp F2   &kp F3     &kp PAUSE_BREAK        &trans  &trans     &trans     &kp RALT  &trans    &trans    
                         &kp ESC  &kp SPACE  &kp TAB                &trans  &trans     &trans
            >;
        };
    };
};